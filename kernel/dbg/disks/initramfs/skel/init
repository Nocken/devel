#!/bin/sh

echo "Loading, please wait..."

[ -d /dev ] || mkdir -m 0755 /dev
[ -d /root ] || mkdir -m 0700 /root
[ -d /sys ] || mkdir /sys
[ -d /proc ] || mkdir /proc
[ -d /tmp ] || mkdir /tmp
[ -d /mnt ] || mkdir /mnt
mkdir -p /var/lock
mount -t sysfs -o nodev,noexec,nosuid none /sys
mount -t proc -o nodev,noexec,nosuid none /proc

# Note that this only becomes /dev on the real filesystem if udev's scripts
# are used; which they will be, but it's worth pointing out
tmpfs_size="10M"
if [ -e /etc/udev/udev.conf ]; then
	. /etc/udev/udev.conf
fi
if ! mount -t devtmpfs -o mode=0755 none /dev; then
	echo "W: devtmpfs not available, falling back to tmpfs for /dev"
	mount -t tmpfs -o size=$tmpfs_size,mode=0755 udev /dev
	[ -e /dev/console ] || mknod -m 0600 /dev/console c 5 1
	[ -e /dev/null ] || mknod /dev/null c 1 3
fi
mkdir /dev/pts
mount -t devpts -o noexec,nosuid,gid=5,mode=0620 none /dev/pts || true
> /dev/.initramfs-tools
mkdir /dev/.initramfs

# Parse command line options
for x in `cat /proc/cmdline`; do
	case $x in
		cmd)
			CMD=1
			;;
		root)
			ROOT="/dev/sda"
			;;
		root=*)
			ROOT=${x#root=}
			;;
		init=*)
			INIT=${x#init=}
			;;
		hotplug=*)
			# use mdev or udev, default udev
			HOTPLUG=${x#hotplug=}
			;;
	esac
done

# Bring in the main config
conf_d=/etc/conf
conf=$conf_d/initramfs.conf
[ -f ${conf} ] && . ${conf}
# the config files depend on the command line options
for conf in $conf_d/conf.d/*; do
	[ -f ${conf} ] && . ${conf}
done
. /scripts/functions

# cmd entry
if [ x"$CMD" != x ]; then
	/bin/sh
fi 

# init scripts
INITDIR=${INITDIR:-"/scripts"}
if [ -f ${INITDIR}/functions ]; then
	. ${INITDIR}/functions
fi

# run init-top
maybe_break top
run_scripts /scripts/init-top

# call busybox init
if [ x"$ROOT" = x ]; then
	exec /linuxrc
fi

# run init-bottom
maybe_break bottom
run_scripts /scripts/init-bottom

# switch root to harddisk
ROOT=${ROOT:-"/dev/sda"}
rootmnt="/root"
mount $ROOT ${rootmnt}
# Move virtual filesystems over to the real filesystem
mount -n -o move /sys ${rootmnt}/sys
mount -n -o move /proc ${rootmnt}/proc
mount -n -o move /dev $rootmnt/dev
# early-userspace finally call init
INIT=${INIT:-"/sbin/init"}
exec switch_root -c /dev/console /root $INIT

